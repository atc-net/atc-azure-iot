name: "Pre-Integration"

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  dotnet-build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: 🛒 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ⚙️ Setup dotnet 8.0.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: 🧹 Clean non-wpf solution
        run: dotnet clean Atc.Azure.IoT-WithoutWpf.sln -c Release && dotnet nuget locals all --clear
        if: runner.os != 'Windows'

      - name: 🧹 Clean all
        run: dotnet clean Atc.Azure.IoT.sln -c Release && dotnet nuget locals all --clear
        if: runner.os == 'Windows'

      - name: 🔁 Restore packages non-wpf solution
        run: dotnet restore Atc.Azure.IoT-WithoutWpf.sln
        if: runner.os != 'Windows'

      - name: 🔁 Restore packages all
        run: dotnet restore Atc.Azure.IoT.sln
        if: runner.os == 'Windows'

      - name: 🛠️ Build non-wpf solution
        run: dotnet build Atc.Azure.IoT-WithoutWpf.sln -c Release --no-restore
        if: runner.os != 'Windows'

      - name: 🛠️ Build all
        run: dotnet build Atc.Azure.IoT.sln -c Release --no-restore
        if: runner.os == 'Windows'

  dotnet-test:
    runs-on: ubuntu-latest
    needs:
      - dotnet-build
    steps:
      - name: 🛒 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ⚙️ Setup dotnet 8.0.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: 🔁 Restore packages
        run: dotnet restore Atc.Azure.IoT.sln

      - name: 🛠️ Build all
        run: dotnet build Atc.Azure.IoT.sln -c Release --no-restore /p:UseSourceLink=true

      - name: 🧪 Run unit tests
        run: dotnet test -c Release --no-build --filter "Category!=Integration"